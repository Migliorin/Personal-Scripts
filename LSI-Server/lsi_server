#!/bin/bash

# Define color variables
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Define user, server IP, and gate variables
USER=""
IP_SERVER=""
GATE=""

# Help function to display usage
Help() {
    echo -e "${YELLOW}Usage: lsi_commands [options]${NC}"
    echo -e "${YELLOW}Options:${NC}"
    echo -e "${YELLOW}  -h, --help            Show this help message${NC}"
    echo -e "${YELLOW}  -t, --terminal        SSH into the server${NC}"
    echo -e "${YELLOW}  --bridge SERVER_PORT LOCAL_PORT  Create SSH bridge${NC}"
    echo -e "${YELLOW}  -c, --copy SRC DEST   Copy file to server${NC}"
    exit 0
}

# Ensure necessary variables are set
if [ -z "$USER" ] || [ -z "$IP_SERVER" ] || [ -z "$GATE" ]; then
    echo -e "${RED}Please set USER, IP_SERVER, and GATE variables before running the script.${NC}"
    exit 1
fi

# Process command-line arguments
while test $# -gt 0; do
    case $1 in 
        -h|--help)
            Help
            ;;
        
        -t|--terminal)
            echo -e "${YELLOW}Connecting to the server...${NC}"
            /usr/bin/ssh "$USER@$IP_SERVER" -p"$GATE"
            ;;
        
        -b|--bridge)
            if [[ -n $2 && -n $3 ]]; then
                echo -e "${YELLOW}Creating SSH bridge...${NC}"
                /usr/bin/ssh -N -f -L "localhost:$3:localhost:$2" "$USER@$IP_SERVER" -p"$GATE"
                shift 2
                echo -e "${GREEN}SSH bridge created successfully.${NC}"
            else
                echo -e "${RED}Positional arguments:${NC}"
                echo -e "${RED}lsi_commands --bridge [SERVER_PORT] [LOCAL_PORT]${NC}"
                exit 1
            fi
            ;;
        
        -c|--copy)
            if [[ -n $2 && -n $3 ]]; then
                echo -e "${YELLOW}Copying file to server...${NC}"
                /usr/bin/scp -P "$GATE" "$2" "$USER@$IP_SERVER:/home/$USER/$3"
                shift 2
                echo -e "${GREEN}File copied successfully.${NC}"
            else
                echo -e "${RED}Positional arguments:${NC}"
                echo -e "${RED}lsi_commands --copy [SRC] [DEST]${NC}"
                exit 1
            fi
            ;;
        
        *)
            Help
            exit 1
            ;;
    esac
    shift
done

